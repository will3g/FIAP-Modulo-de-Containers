version: '3.8'

services:
  mongodb:
    container_name: mongodb
    hostname: mongodb
    image: mongo
    ports:
      - "27017:27017"
    volumes:
      - ./data/mongodb:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    networks:
      - mynetwork

  mongodb-compass:
    image: mongo-express:1.0.0-18-alpine3.18
    container_name: compass
    environment:
      ME_CONFIG_MONGODB_SERVER: "mongodb"
      ME_CONFIG_MONGODB_PORT: "27017"
      ME_CONFIG_MONGODB_ENABLE_ADMIN: "true"
      ME_CONFIG_MONGODB_ADMINUSERNAME: "root"
      ME_CONFIG_MONGODB_ADMINPASSWORD: "root"
      ME_CONFIG_BASICAUTH_USERNAME: "root"
      ME_CONFIG_BASICAUTH_PASSWORD: "root"
    ports:
      - "8081:8081" # INTERFACE: http://localhost:8081
    depends_on:
      - mongo
    networks:
      - mynetwork

  app1:
    build:
      context: ./app1
      dockerfile: Dockerfile
    container_name: app1
    hostname: app1
    volumes:
      - ./app1:/app
    depends_on:
      - mongodb
    environment:
      MONGODB_PASS: "root"
      MONGODB_USER: "root"
      MONGODB_PORT: "27017"
      MONGODB_HOSTNAME: "mongodb"
      MONGODB_DATABASE: "finance"
      MONGODB_COLLECTION: "tickers"
      EXTERNAL_API: "https://dadosdemercado.com.br/acoes"
    networks:
      - mynetwork

  app2:
    build:
      context: ./app2
      dockerfile: Dockerfile
    container_name: app2
    hostname: app2
    volumes:
      - ./app2:/app
    depends_on:
      - mongodb
    ports:
      - "5000:5000"
    environment:
      MONGODB_PASS: "root"
      MONGODB_USER: "root"
      MONGODB_PORT: "27017"
      MONGODB_HOSTNAME: "mongodb"
      MONGODB_DATABASE: "finance"
      MONGODB_COLLECTION: "tickers"
      APP_HOST: "0.0.0.0"
      APP_PORT: "5000"
    networks:
      - mynetwork

  app3:
    build:
      context: ./app3
      dockerfile: Dockerfile
    container_name: app3
    hostname: app3
    volumes:
      - ./app3:/app
    depends_on:
      - mongodb
    ports:
      - "8501:8501" # INTERFACE: http://localhost:8501
    environment:
      API_URL: "http://app2:5000/ticker/"
    networks:
      - mynetwork

networks:
  mynetwork:
    name: mynetwork
    driver: bridge
